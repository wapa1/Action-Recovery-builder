name: Building recovery

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'LIBRARY_NAME'
        required: true
        default: 'omni'
      LIBRARY_URL:
        description: 'LIBRARY_URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni'
      LIBRARY_BRANCH:
        description: 'LIBRARY_BRANCH'
        required: true
        default: 'twrp'
      DEVICE_URL:
        description: 'DEVICE_URL'
        required: true
        default: 'https://github.com/shitianshiwa/twrp_device_xiaomi_redmi9a'
      DEVICE_BRANCH:
        description: 'DEVICE_BRANCH'
        required: true
        default: 'twrp'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/dandelion'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'dandelion'
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5


env:
  MANIFEST: ${{ github.event.inputs.LIBRARY_URL }}
  #https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp
  DEVICE:   ${{ github.event.inputs.DEVICE_NAME }}
  DT_LINK: ${{ github.event.inputs.DEVICE_URL }}
  #https://github.com/senpaimaster05/twrp_device_xiaomi_dandelion
  DT_PATH:  ${{ github.event.inputs.DEVICE_PATH }}
  TARGET: recoveryimage
  TZ: Asia/China

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
       - name: Checkout
         uses: actions/checkout@master
         

       - name: Initializing environment
         run: |
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
            docker rmi `docker images -q`
            sudo apt-get remove account-plugin-facebook account-plugin-flickr account-plugin-jabber account-plugin-salut account-plugin-twitter account-plugin-windows-live account-plugin-yahoo aisleriot brltty duplicity empathy empathy-common example-content gnome-accessibility-themes gnome-contacts gnome-mahjongg gnome-mines gnome-orca gnome-screensaver gnome-sudoku gnome-video-effects gnomine landscape-common libreoffice-avmedia-backend-gstreamer libreoffice-base-core libreoffice-calc libreoffice-common libreoffice-core libreoffice-draw libreoffice-gnome libreoffice-gtk libreoffice-impress libreoffice-math libreoffice-ogltrans libreoffice-pdfimport libreoffice-style-galaxy libreoffice-style-human libreoffice-writer libsane libsane-common mcp-account-manager-uoa python3-uno rhythmbox rhythmbox-plugins rhythmbox-plugin-zeitgeist sane-utils shotwell shotwell-common telepathy-gabble telepathy-haze telepathy-idle telepathy-indicator telepathy-logger telepathy-mission-control-5 telepathy-salut totem totem-common totem-plugins printer-driver-brlaser printer-driver-foo2zjs printer-driver-foo2zjs-common printer-driver-m2300w printer-driver-ptouch printer-driver-splix
            git config --global user.name "mastersenpai05"
            git config --global user.email "pampangavergil0405@gmail.com"         
            sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* 
            sudo -E apt-get clean
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python gcc clang libssl-dev repo rsync flex curl  bison aria2
            sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo
            sudo chmod a+rx /usr/local/bin/repo
            export PATH=/usr/local/bin:$PATH
       - name: Sync recovery source and device tree
         run: |
             PATH=/usr/local/bin:$PATH
             mkdir work
             cd work
             #repo init -u $MANIFEST --depth=1
             repo init --depth=1 -u ${{ github.event.inputs.LIBRARY_URL }} -b ${{ github.event.inputs.LIBRARY_BRANCH }} _$DEVICE
             repo sync -c -j4 --force-sync --no-clone-bundle --no-tags
             repo sync -c -j4 --force-sync --no-clone-bundle --no-tags
             git clone --depth=1 $DT_LINK $DT_PATH
             
       - name: Build
         run: |
              PATH=/usr/local/bin:$PATH
              cd work
              . build/envsetup.sh 
              lunch twrp_$DEVICE-eng 
              export ALLOW_MISSING_DEPENDENCIES=true 
              mka clean
              mka $TARGET
             
       - name: Release recovery image
         uses: softprops/action-gh-release@v1
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
          tag_name: TWRP_11.0
          name: TEST
          files: | 
            work/out/target/product/ $DEVICE /recovery.img
