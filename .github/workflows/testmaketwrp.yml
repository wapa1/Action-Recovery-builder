name: testofoxmake

on:
  workflow_dispatch:
    inputs:
      DEVICE_URL:
        description: 'DEVICE_URL'
        required: true
        default: 'https://github.com/shitianshiwa/twrp_device_xiaomi_redmi9a'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/dandelion'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'dandelion'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04
    
    steps:
    - name: Check Out
      uses: actions/checkout@main
      
    - name: Prepare the environment
      run: |
        #cd /system/core/mkbootimg/
        #make recoveryimage
        #find ~ –name "mkbootimg*" –print
        #cd android/system/core
        
        #docker rmi `docker images -q`
        sudo rm -f /system/core/mkbootimg/mkbootimg
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d /workspace ~/OrangeFox_sync ~/OrangeFox_10 ~/OrangeFox_9
        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo apt -y autoremove --purge
        sudo apt -y autoclean
        sudo apt clean
        #sudo  apt-get update --fix-missing
        #sudo apt -y upgrade
        #sudo apt -y install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip jq bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev imagemagick libbz2-dev libssl-dev lzma ncftp bash-completion python openjdk-8-jdk qemu-user-static
        # 更新软件源
        sudo apt update
        # 安装软件包
        sudo apt install git-core gnupg flex bison gperf \
        zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 \
        lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache \
        libgl1-mesa-dev libxml2-utils xsltproc unzip
        # 安装OpenJDK
        sudo apt install openjdk-8-jdk
        # 安装编译套件build-essential。若出错，则请使用以下第二行的命令
        #sudo apt install build-essential
        sudo apt install gcc g++ make
        sudo apt install software-properties-common
        
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt install python2.7
        sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1
        sudo update-alternatives --list python
        sudo update-alternatives --config python
        sudo apt install python3-pip
        python -m pip install --upgrade pip
      
    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var
      
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        #curl https://github.com/osm0sis/mkbootimg > ~/bin/mkbootimg
        #chmod a+x ~/bin/mkbootimg
        export PATH=~/bin:$PATH
        git clone https://github.com/xiaolu/mkbootimg_tools ~/bin/mkbootimg
        #git clone https://github.com/osm0sis/mkbootimg  ~/bin/mkbootimg
        #chmod a+x ~/bin/mkbootimg/Makefile
        #cd android/system/core
        chmod a+x ~/bin/mkbootimg/dtbTool
        ~/bin/mkbootimg/dtbTool
      
    - name: Initialize repo
      run: |
        PATH=~/bin:$PATH
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "Hikaru's Action-Build-Bot"
        git config --global user.email "Android@teio.tk"
        #repo init --depth=1 -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git -b twrp-9.0
      id: pwd
          
    - name: Repo Sync
      run: |
        PATH=~/bin:$PATH
        #mkdir ~/OrangeFox_sync
        #cd ~/OrangeFox_sync
        #git clone https://gitlab.com/OrangeFox/sync.git
        #cd ~/OrangeFox_sync/sync/
        #./orangefox_sync.sh --branch 11.0 --path ~/fox_11.0
        #mkdir ~/OrangeFox_10
        #cd ~/OrangeFox_10
        #rsync rsync://sources.orangefox.download/sources/fox_10.0 . --progress -a
        mkdir ~/OrangeFox_9
        cd ~/OrangeFox_9
        #repo init -u https://gitlab.com/OrangeFox/Manifest.git -b fox_9.0
        repo init --depth=1 -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git -b twrp-9.0
        repo sync -j8 --force-sync
                
    - name: Clone device
      run: |
        PATH=~/bin:$PATH
        cd ~/OrangeFox_9
        git clone ${{ github.event.inputs.DEVICE_URL }} ${{ github.event.inputs.DEVICE_PATH }}
        

        
    - name: Building
      run: |
        PATH=~/bin:$PATH
        #mkdir ~/OrangeFox_9/out
        #mkdir ~/OrangeFox_9/out/host
        #mkdir ~/OrangeFox_9/out/host/linux-x86
        #mkdir ~/OrangeFox_9/out/host/linux-x86/bin
        cd ~/OrangeFox_9
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        #export FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER=1
        #export LC_ALL="C"

        # or, for the 11.0 (or higher) branch
        lunch omni_${{ github.event.inputs.DEVICE_NAME }}-eng 
        git clone https://github.com/xiaolu/mkbootimg_tools ~/OrangeFox_9/t
        #sudo cp ~/OrangeFox_9/t/mkbootimg /system/core/mkbootimg
        sudo rm -f /system/core/mkbootimg/mkbootimg
        cp \"/home/runner/OrangeFox_9/t/mkbootimg\" \"/system/core/mkbootimg\" 
        chmod +x /system/core/mkbootimg/mkbootimg
        mka recoveryimage        
      
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: ~/OrangeFox_9/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/recovery.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
